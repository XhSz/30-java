
account:{
	vostro,存放在国外同意帐户，往帐，我方帐户，银行往来帐户;来帐;
	nostro,同业存款，贵行帐，来帐;（国外汇兑）往（来）帐；我方帐户;
	
	nostro,往账,我行在其他行开户.通常国外货币开立;
	vostro,来账,其他行在我行开户.通常本国货币,也可外国货币;
}
exchange:{
	https://max.book118.com/html/2018/1107/7102003026001156.shtm
	"外汇"-'国际汇兑'-"foreign exchange":{
		"汇兑":{
			"汇款人"委托"银行"将其"款项"支付给"收款人"的'结算方式'。
			电汇/信汇 '汇款人自行选择'
			单位/个人 '各种款项的结算',均可'使用汇兑结算方式'。
			'这种方式便于汇款人向'异地'的收款人'主动'付款','适用范围十分广泛'。
			'简而言之',汇兑'即'"委托""银行"'作为'"付款人"'进行'"付款"
		}
		'词语属性':{
			'动态','把一国货币兑换成另一国货币','借以偿清国际间债权债务关系的行为和活动'。'等同于国际结算';
			'静态','指外币和以外币表示的''用于''国际结算的各种支付手段'.'例如','各种外国钞票及外币表示的证券或其他支付凭证';
		},
		'分类':{
			'自由兑换':{
				记账外汇:{'债权债务不逐笔结算','而是通过当事国的中央银行账户相互冲销','不能用来对第三国支付','不能兑换成其他国家的货币'},
				自由外汇:{'可以自由兑换成其他货币、或向第三者办理支付的货币与支付凭证'}
			},
			'来源用途':{贸易外汇:'来源于或用于国际间商品买卖的外汇',非贸易外汇:'除贸易外汇以外,通过其他方面所收付的外汇。如科学技术、文化交流...'},
			'交割期限':{'即期外汇':"现汇",'在外汇买卖成交后两个营业日内办理交割的外汇','远期外汇':"期汇",'买卖外汇双方先按商定的汇价签订合同,预约到一定期限办理交割的外汇'}
		},
		"结汇":{
			'外汇收入所有者将其外汇收入,出售给外汇指定银行,外汇指定银行按照一定汇率付给等值的'"本币"'行为';
			'强制结汇','所有外汇收入'"必须"'卖给外汇指定银行,不允许保留外汇';-'主要'
			'意愿结汇','外汇收入可以卖给外汇指定银行,也可以'"开立外汇账户"'保留,结汇与否由外汇收入所有者自己决定';-'境内居民个人'
			'限额结汇','外汇收入在国家核定的数额内可不结汇,超过'"限额"'必须卖给外汇指定银行';-'部分企业经批准'
		},
		"售汇":{'外汇指定银行将外汇'"卖给"'外汇使用者,并根据交易行为发生之日的人民币汇率'"收取"'等值人民币行为';},
		"付汇":{'经批准经营外汇业务的金融机构,根据有关售汇以及付汇的管理规定,审核用汇单位和个人提供的规定的有效凭证和商业单据后,从其'"外汇账户"'中或将其购买的'"外汇"'向'"境外"'支付的行为';},
		"售汇":{'外汇指定银行将外汇'"卖给"'外汇使用者,并根据交易行为发生之日的人民币汇率'"收取"'等值人民币行为';},
		"套汇":{'利用同一时期'"两个"'或两个以上的外汇市场上现汇'"汇率"'的'"差异"'进行外汇买卖,通过低进高出即贱买贵卖从中套取利润的一种投机活动'},
	}
},
edsp:{
	11-ksys_rwzhxy-'批量任务执行域':{
					jyzxybzh								fenbsjql		kezxlclb		kezxjyzl	zhixyzht	zxtongbh
				批量交易执行域标识	分布式环境下,worker集群列表,格式ip1:port1;ip2:port2	可执行批量交易组列表
																	可执行批量交易流程列表				执行域状态	子系统编号
		values:{
			GL	99	GL			5	10	10	5	10	20	172.31.2.12:7493		;				*		RUNNING		bat
			GL	99	gl_dayend	1	1	5	5	10	20	;					gl_dayend			;		RUNNING		bat
			GL	99	gl_yearend	1	1	5	5	10	20	;					gl_yearend			;		RUNNING		bat
		}
	},	
	12-ksys_pllcbz-'批量流程步骤控制器':{
					pljylcbs	lcbuzmch			liucbuzh	zhixxuha	pljyzbsh		shifzhix
				批量交易流程ID	流程步骤名称		流程步骤号	执行序号	批量交易组ID	是否执行
		values:{
			GL	99	gl_dayend	GL EOD check			1			10			900				1
			GL	99	gl_dayend	gl date switch before	2			10			910				1
			GL	99	gl_dayend	gl date switch			3			10			920				1
			GL	99	gl_dayend	gl date switch after	4			10			930				1
			GL	99	gl_yearend	gl year end trail		1			10			940				1
		}
	},
	13-ksys_jyzkzq-'交易组控制器':{
					pljyzbsh	zubiezwm					rwyxxktj				rwyxhdfw
				批量交易组ID	交易组别中文描述	批量任务运行许可条件	批量任务运行回调服务
		values:{
			GL	99	100			File Operation		
			GL	99	110			Timing Task		
			GL	99	900			GL EOD check		
			GL	99	910			gl date switch before		
			GL	99	920			gl date switch		
			GL	99	930			gl date switch after		
			GL	99	940			gl year end trail		
		}
	},
	21-ksys_plrenw-'批量任务表':{
		insert-1:{
			DBBatchTaskInfoManager.registBatchTaskInfo(BatchTaskInfo, boolean);-3:{
				2-BatchUtil:{
					BatchUtil.submitAndRunTask(BatchTaskSubmitInfo, boolean);
					BatchUtil.submitAndRunTaskForAdmWeb(String, String, int, E_BATCHTASKEXECUTORMODE, DataArea)
				},
				1-DBBatchTaskInfoManager.registBatchTaskInfo(BatchTaskInfo)-1:{
				};
			}
		},
		col:{
			plrwzxpc-'批量任务执行批次号':{
				set-1:{
					DBBatchTaskExecuteInfo.setBatchTaskExecuteId(String);-7:{
						
					}
				}
			}
		},
		bean-interface-"BatchTaskInfo":{
			implements:{
				DBBatchTaskInfo:{
					ksys_plrenw info;:{
						
					},
					DBBatchTaskInfo();:{info=new ksys_plrenw},
					DBBatchTaskInfo(ksys_plrenw):{info=ksys_plrenw},
				}
			}
		}
	},
	ksys_plrwyx-'批量任务运行表':{
		insert-2:{
			DBBatchTaskExecuteInfoManager.registBatchTaskInfo(BatchTaskExecuteInfo, boolean);
			DBBatchTaskExecuteInfoManager.modifyBatchTaskInfo(BatchTaskExecuteInfo, boolean);
		},
		values:{
			
		}
	}
},
ltts:{
	batch:{
		EngineBatchPluginErrorDef-'批量调度引擎插件错误码定义':{
			SP_EB-'批量调度引擎插件':{
				E133-'任务执行域${domainId}作业服务器列表属性配置错误':{
					call-1:{
						RemoteJobExecutorThreadPoll.RemoteJobExecutorThreadPoll(BatchTaskDomainInfo, ThreadPoolExecutor);:{
							logic:{
								getSocketCliendConfig(BatchTaskDomainInfo):{
									for(config.getWorkers()):{
										new SocketClientConfig(ipAndPort, (String)items.get(0), Integer.parseInt((String)items.get(1)))
									}
								},
							},
							call-1:{
								BatchTaskExecutorRouterByServerMode.getBatchJobExecutor(BatchStep):{
									logic:{
										
									},
									BatchTaskDomainInfo domainInfo -set-1:{
										BatchTaskExecutorRouterByServerMode(ThreadPoolExecutor, ThreadPoolExecutor, BatchTaskDomainInfo domainInfo);:{
											call-1:{
												LocalBatchTaskDomainServer.BatchTaskCallable.execute():{
													config-set-2:{
														LocalBatchTaskDomainServer(BatchTaskDomainInfo);-1:{
															LocalBatchTaskDomainServerManager.domainStart(BatchTaskDomainInfo);-2:{
																LocalBatchTaskDomainServerManager.domainLoad();-logic:{
																	BatchResources.get().getBatchServerDataManager().getAllRunnableDomainInfo(subSystemId);-call-2:{
																		DBBatchServerDataManager.getAllRunnableDomainInfo(String);-logic:{
																			getGroupDomainInfos(SysBatchDao.selectAllRunnableTaskDomain(subSystemId, CoreUtil.getSystemId(), false));:{
																				nsql-SysBatch.selectAllRunnableTaskDomain:{
																					select * from ksys_rwzhxy
																					where zhixyzht in ('START', 'RUNNING') and zxtongbh='bat' and xitongbs='CBS'
																				},
																				new DBBatchTaskDomainInfo(domain-'ksys_rwzhxy');:{
																					domain_id:"xitongbs-Farendma-Jyzxybzh"; 'CBS-99-Core_EOD'
																					workers:Fenbsjql; ';'
																				}
																			}
																		}
																		XmlBatchServerDataManager.getAllRunnableDomainInfo(String);:{return null;}
																	}
																},
																LocalBatchTaskDomainServerManager.domainReload();-logic:{
																	BatchResources.get().getBatchServerDataManager().getAllStartDomainInfo(subSystemId);-call-2:{
																		DBBatchServerDataManager.getAllStartDomainInfo(String);-logic:{
																			getGroupDomainInfos(Ksys_rwzhxyDao.selectAll_odb_2(subSystemId, KBaseEnumType.E_ZHIXYZHT.START, false));:{}
																		}
																		XmlBatchServerDataManager.getAllStartDomainInfo(String);:{return null;}
																	}
																}
															}
														}
														LocalBatchTaskDomainServer.reload(BatchTaskDomainInfo);
													},
													batchTaskInfo-BatchTaskCallable.BatchTaskInfo-set:{
														BatchTaskCallable(BatchTaskInfo, BatchTaskExecuteInfoManager);
														LocalBatchTaskDomainServer.submit(BatchTaskInfo, boolean);
													}
												}
											}
										}
									}
								}
							}
						}
					} 
				}
			}	
		}
	}
},
ap:{
	ap0901-'获取需要执行的日终流程':{
		S-CustomBatchManager.getFlowIdsBySystemId-'获取需要执行的日终流程服务':{
			IBatchTranCustomManager.getFlowIdsForSystemId(String xitongbs)-'batch_trans_custom.batchTransCustomManager':{
				BsapBatchTranCustomManagerImpl.getFlowIdsForSystemId(String):{
					nsql-ApDayEnd.selBatchTranDef:{
						select
								a.pljylcbs,a.zhongwmc 
						from
								ksys_pllcdy a 
						where
								a.xitongbs = #system_id#
					}
				}
			}
		}
	},
	ap0800-'多法人日终状态全量信息查询':{
		S-CustomBatchManager.selMultiCorpnoStatusInfo-'多法人日终状态信息查询':{
			IBatchTranCustomManager.getMultiCorpnoDayEndStu(systcd, flowId, dayEndDate);-'batch_trans_custom.batchTransCustomManager':{
				BsapBatchTranCustomManagerImpl.getMultiCorpnoDayEndStu(String):{
					table-aps_dayend_info-select:{}
				}
			}
			table-aps_dayend_info-insert;
		}
	},
	ap0801-X00006'bat'-X00005'ops'eb0801-:{
		S-CustomBatchManager.submitMultiCorpnoDayEnd:{
			
		}
	},
	ap0810-'单法人多DCN日终状态查询服务':{
		S-CustomBatchManager.selMultiDcnStatusInfo-'获取需要执行的日终流程服务':{
			shifddcn:{
				!N:{
					CustomDRSUtil.findAllDcnNosWithAdmin();:{
						getIDRSClient().getDCN();:{
							
						}
					}
				}
			}
		}
	},
	ApTrxn.getAccountingEventSerial();:{
		call-1:{
			TaAccounting.regAccountingEvent(IoTaAccountingEventIn);
		}
	},
	TransactionProcessCallbackImpl.afterProcess(DataArea);:{
		accounting_event_seq > 1L :{
			SrvIoTaAccounting.checkBalance();
		}
	},
	ApBusinessParm.getValue:{
		select * from app_business_parameter where main_key='' and sub_key='*';
		select * from app_business_parameter where main_key='' and sub_key='';
	},
	ApFile.getFullPath：{
		select * from app_directory;
	},
	ApSystemParm.getValue:{
		select * from app_system_parameter where main_key='' and sub_key='*';
		select * from app_system_parameter where main_key='' and sub_key='';
	}
},