
		dp04-'存款预留数据登记'-'Dept to set aside data registration':{
			process:{
					method-BizUtil.getTrxRunEnvs-'null',
					method-DpDayEndInterest.regAccrualExtract-'负债利息计提':{
						method-BizUtil.getTrxRunEnvs-'null',
						nsql-DpDayEnd.selAccrualExtractRecord-S-dpa_sub_account-select-'Statistics dept interest to set aside data',
						localSer-SrvIoTaAccounting.regAccure-'null':{
							method-TaAccounting.regAccure-'null':{
								method-BizUtil.fieldNotNull-'null',
								method-BizUtil.fieldNotNull-'null',
								method-BizUtil.fieldNotNull-'null',
								method-BizUtil.fieldNotNull-'null',
								method-BizUtil.fieldNotNull-'null',
								method-BizUtil.fieldNotNull-'null',
								method-ApBusinessParm.getValue-'null':{
									table-app_business_parameter-select-'system parameter'
								},
								table-tap_accountingevent_ctrl-select-'contrl accounting event',
								method-BizUtil.getTrxRunEnvs-'null',
								table-tas_accrue_record-insert-'the accure data of core bank'
							}
						}
					},
					method-DpOverDraftDayEnd.regAccrualExtract(String lastInstDate-'trxn_date')-'透支利息计提':{		'登记应收利息计提数据(透支利息)'-'zhoumy'
						method-BizUtil.getTrxRunEnvs-'null',						
						method-BizUtil.getTrxRunEnvs-'null',
						List listAccrual = DpDayEndDao.selOverdraftAccrualExtractData(false);
							nsql-DpDayEnd.selOverdraftAccrualExtractData-S-dpb_overdraft-select,dpa_sub_account-select-'Statistics dept interest to set aside data':{
								select b.sub_acct_branch, b.accounting_alias, b.ccy_code
								  from dpb_overdraft a
								  join dpa_sub_account b
									on a.org_id = b.org_id
								   and a.acct_no = b.acct_no
								   and a.ccy_code = b.ccy_code
								 where a.agree_status = '1'
								 group by b.sub_acct_branch, b.accounting_alias, b.ccy_code
							},
						for (DpAccrualExtractData accrualData : listAccrual) {
							List subAcctList = DpDayEndDao.selOverdraftAccrualSubAcct(accrualData.getSub_acct_branch(), accrualData.getAccounting_alias(), accrualData.getCcy_code(), false);
								'查询生效的签约了透支协议的子账户'
								nsql-DpDayEnd.selOverdraftAccrualSubAcct-S-dpb_overdraft-select,dpa_sub_account-select-'query accrual sub account':{
									select b.*
									  from dpb_overdraft a
									  join dpa_sub_account b
										on a.org_id = b.org_id
									   and a.acct_no = b.acct_no
									   and a.ccy_code = b.ccy_code
									 where a.agree_status = '1'
									   and b.sub_acct_branch = #sub_acct_branch#
									   and b.accounting_alias = #accounting_alias#
									   and b.ccy_code = #ccy_code#
								},
							for (dpa_sub_account subAcct : subAcctList) {
								List listODAgree = DpFundPoolDao.selOverdraftAgreeByAcct(subAcct.getAcct_no(), subAcct.getCcy_code(), E_STATUS.VALID, trxnDate, orgId, false);
									nsql-DpFundPool.selOverdraftAgreeByAcct-S-dpb_overdraft-select-'query vaild overdraft agree by account number':{
										  select * from dpb_overdraft   a 
											where a.acct_no =#acct_no# 
											   and a.ccy_code = #ccy_code# 
											   and a.org_id = #org_id# 
											   and a.agree_status = #agree_status#
											   and a.effect_date <= #trxn_date#
											   and a.expiry_date >  #trxn_date#
											   order by a.effect_date asc
									},
								for (dpb_overdraft ODAgree : listODAgree) {
								'正常透支卡片'
								dpb_overdraft_fiche overdraftNomalFiche = Dpb_overdraft_ficheDao.selectOne_odb1(ODAgree.getAgree_no(), "N"-'E_OVERDRAFTINSTTYPE.NORMAL', true);
										table-dpb_overdraft_fiche-select-'Account overdraft fiche',
									'正常卡片计息定义信息'
									dpa_fiche_interest ficheNomalInterest = Dpa_fiche_interestDao.selectOne_odb1(overdraftNomalFiche.getFiche_no(), false);
										table-dpa_fiche_interest-select-'Fiche interest table',
									'正常卡片计提利息'
									BigDecimal normalInst = CommUtil.isNull(ficheNomalInterest.getLast_prov_inst()) ? BigDecimal.ZERO : ficheNomalInterest.getLast_prov_inst();
									'正常卡片逾期利息'
									BigDecimal normalOverdueInst = CommUtil.isNull(overdraftNomalFiche.getLast_prov_overdue_inst()) ? 
										BigDecimal.ZERO : overdraftNomalFiche.getLast_prov_overdue_inst();
									dpb_overdraft_fiche overdraftExcessFiche = Dpb_overdraft_ficheDao.selectOne_odb1(ODAgree.getAgree_no(), "O"-'E_OVERDRAFTINSTTYPE.EXCESS', false);
										table-dpb_overdraft_fiche-select-'Account overdraft fiche',
									if(CommUtil.isNotNull(overdraftExcessFiche)){
										dpa_fiche_interest ficheExcessInterest = Dpa_fiche_interestDao.selectOne_odb1(overdraftExcessFiche.getFiche_no(), false);
											table-dpa_fiche_interest-select-'Fiche interest table',
										excesslInst = CommUtil.isNull(ficheExcessInterest.getLast_prov_inst()) ? BigDecimal.ZERO : ficheExcessInterest.getLast_prov_inst();
									}
									totalNormalInst = totalNormalInst.add(normalOverdueInst).add(normalInst).add(excesslInst);
								}
							}
							DpAccrualExtractData normalAccrualData = BizUtil.clone(DpAccrualExtractData.class, accrualData);
							normalAccrualData.setLast_prov_inst(totalNormalInst);
							normalAccrual.add(normalAccrualData);
						}
						for (DpAccrualExtractData cplData : normalAccrual) {
							cplAccuralRecord.setBudget_inst_amt(cplData.getLast_prov_inst());
							localSer-SrvIoTaAccounting.regAccure-'null':{
								method-TaAccounting.regAccure-'null':{
									method-BizUtil.fieldNotNull-'null',
									method-BizUtil.fieldNotNull-'null',
									method-BizUtil.fieldNotNull-'null',
									method-BizUtil.fieldNotNull-'null',
									method-BizUtil.fieldNotNull-'null',
									method-BizUtil.fieldNotNull-'null',
									method-ApBusinessParm.getValue-'null':{
										table-app_business_parameter-select-'system parameter'
									},
									table-tap_accountingevent_ctrl-select-'contrl accounting event',
									method-BizUtil.getTrxRunEnvs-'null',
									table-tas_accrue_record-insert-'the accure data of core bank'
								}
							}
						}
					}
			},
		},
		