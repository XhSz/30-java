



30-java:{
	110-jvm:{
		parameter:{
			-Djava.awt.headless=true:{
				1. 	什么是Headless mode？ Headless模式是系统的一种配置模式。在该模式下，系统缺少了显示设备、键盘或鼠标。
				2. 	何时使用和headless mode？Headless模式虽然不是我们愿意见到的，但事实上我们却常常需要在该模式下工作，尤其是服务器端程序开发者。
					因为服务器（如提供Web服务的主机）往往可能"缺少"前述设备，但又需要"使用"他们提供的功能，生成相应的数据，以提供给客户端（如浏览器所在的配有相关的显示设备、键盘和鼠标的主机）。
				3.	如何使用和Headless mode？一般是在程序开始激活headless模式，告诉程序，现在你要工作在Headless mode下，就不要指望硬件帮忙了，你得自力更生，依靠系统的计算能力模拟出这些特性来:发布于 2020-06-11
				
				4. 测试程序：
				5. Toolkit类的getDefaultToolkit 函数 api中文说明
					public static Toolkit  getDefaultToolkit ()获取默认工具包。如果名为 "java.awt.headless" 的系统属性被设置为 true，则使用 Toolkit 的 headless 实现。如果不存在 "java.awt.headless" 或 "java.awt.headless" 被设置为 false，且存在名为 "awt.toolkit" 的系统属性，则该属性将被视为 Toolkit 子类的名称；否则将使用特定于平台的默认 Toolkit 实现。还可以使用 Sun 引用实现中指定的属性 'assistive_technologies' 将其他类加载到 VM 中，该属性是在 'accessibility.properties' 文件的一个行中指定的。形式是 "assistive_technologies=..."，其中 "..." 是以逗号分隔的、要加载的辅助技术类的列表。每个类都以给定的顺序加载，并且要使用 Class.forName(class).newInstance() 创建每个类的单独实例。此操作在创建 AWT 工具包之后进行。所有错误都通过 AWTError 异常来处理。  返回： 默认工具包。  抛出： AWTError - 如果不能找到 工具包 ，或者不能访问或实例化工具包。
				
				ref,	https://blog.idrsolutions.com/2013/08/what-is-headless-mode-in-java/
			}
		}
	},
	130-grammar:{
		Class:{
			Class.getName()：以String的形式，返回Class对象的“实体”名称；{
				com.se7n.test.Main
			},
			Class.getSimpleName()：获取源代码中给出的“底层类”简称。:{
				Main
			}
		},
		p21_file_xls:{
			jxl-小:{
				<dependency>
					<groupId>net.sourceforge.jexcelapi</groupId>
					<artifactId>jxl</artifactId>
					<version>2.6.12</version>
				</dependency>
			},
			poi-大:{
				<dependency>
					<groupId>org.apache.poi</groupId>
					<artifactId>poi</artifactId>
					<version>4.1.0</version>
				</dependency>
			}
		},
		p41_http:{
			
		}
	},
	301-deploy-ant:{
		java -cp ./lib/ant.jar:./lib/ant-launcher.jar org.apache.tools.ant.Main -f run.xml &
		ant.jar:{
			org.apache.tools.ant.Main:{
				start(args, null, null);:{
					
				}
			}
		}
		web:{
			apache-tomcat-6.0.45/bin/jcm-config.xml:<appPort>8080</appPort>
			apache-tomcat-6.0.45/bin/jcm-config.xml:<jcm-url>http://localhost:8080/jcmadm</jcm-url>

			http://172.31.2.12:8080/jcmadm/vision/RMIServlet
			req-body:{
				className: UserService,
				methodName: getDefaultDepartment,searchUsersInCurUser,getMatchUsersNumberInCurUser
				params: '%5B%22ADMIN%22%2C%22DEPARTMENT%22%5D'-'["ADMIN","DEPARTMENT"]','%5B%22admin%22%5D'-'["admin"]'
			},
			rep-body:{
				{"retCode":0,"result":{"alias":"Root Group","departmentCode":"","desc":"System Inner Group","hierarchyNodes":[{"hierarchyId":"DEPARTMENT","id":"DEPARTMENT"}],"id":"DEPARTMENT","name":"Root Group"}}
			},
			code:{
				jcm.framework.rmi.RMIServlet.doPost(RMIServlet.java:113)
				
				CheckDataJob.manageSql(IChkComponent);-2{
					execute(IAgentCallInfo);
					run(IChkComponent, Connection);
				}
			}
		}
	},
	301-deploy-ORACLE-Bussiness Intelligence:{
		Oracle BIEE 12c 安装配置手册
			https://wenku.baidu.com/view/3bc946049ec3d5bbfc0a748a.html
		什么是主题区域和列:
			https://docs.oracle.com/middleware/12211help/biee/zh_CN/bi.12211/e73394/GUID-A26B1EB4-7782-4BD8-91A5-63638A215D08.htm#BIEUG1023
		http://172.31.2.12:9518/analytics/saw.dll?ReloadDashboard
		http://172.31.2.12:9518/analytics/saw.dll?getReportXmlFromSearchID	:{
			OBIPS11RsfQy6Z+qdA0
			{t:2}RsfQy6Z+qdA0
			<saw:report xmlns:saw="com.siebel.analytics.web/report/v1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
			xmlns:sawx="com.siebel.analytics.web/expression/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlVersion="201201160">
			<saw:criteria xsi:type="saw:simpleCriteria" subjectArea="&quot;IDL&quot;" withinHierarchy="true">
			<saw:columns><saw:column xsi:type="saw:regularColumn" columnID="ca66ef6ecefe211d4">
			<saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."GL"</sawx:expr></saw:columnFormula><saw:displayFormat>
			<saw:formatSpec suppress="suppress" wrapText="false"/></saw:displayFormat><saw:tableHeading><saw:caption fmt="text">
			<saw:text>RPT_LOAN_LIST</saw:text></saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat>
			<saw:caption fmt="text"><saw:text>GL</saw:text></saw:caption></saw:columnHeading></saw:column>
			<saw:column xsi:type="saw:regularColumn" columnID="cb7ca08d96bf40f1d"><saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."CUST_ID"</sawx:expr>
			</saw:columnFormula><saw:displayFormat><saw:formatSpec suppress="suppress" wrapText="false"/></saw:displayFormat><saw:tableHeading><saw:caption fmt="text">
			<saw:text>RPT_LOAN_LIST</saw:text></saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text">
			<saw:text>CUSTOMER ID</saw:text></saw:caption></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="ca18ec9ddc6d17e94">
			<saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."LOAN_CON_NUM"</sawx:expr></saw:columnFormula><saw:displayFormat>
			<saw:formatSpec suppress="repeat" wrapText="true"/></saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption>
			</saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text"><saw:text>LOAN CONTRACT NUMBER</saw:text>
			</saw:caption></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="c493438368be12379"><saw:columnFormula>
			<sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."ACCT_NUM"</sawx:expr></saw:columnFormula><saw:displayFormat>
			<saw:formatSpec suppress="suppress" wrapText="false"/></saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption>
			</saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text"><saw:text>ACCOUNT NUMBER</saw:text>
			</saw:caption></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="c8cc5e227f866e7d4"><saw:columnFormula>
			<sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."ACCT_TYPE"</sawx:expr></saw:columnFormula><saw:displayFormat>
			<saw:formatSpec suppress="suppress" wrapText="false"/></saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text>
			</saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text"><saw:text>ACCOUNT TYPE</saw:text>
			</saw:caption></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="c4d62d6f44c0f7d51"><saw:columnFormula>
			<sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."CUST_NAME"</sawx:expr></saw:columnFormula><saw:displayFormat>
			<saw:formatSpec suppress="suppress" wrapText="false"/></saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text>
			</saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text">
			<saw:text>CUSTOMER NAME</saw:text></saw:caption></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="cc25a1908a2138efc">
			<saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."BRANCH_CODE"</sawx:expr></saw:columnFormula><saw:displayFormat>
			<saw:formatSpec suppress="suppress" wrapText="false"/></saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption>
			</saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text"><saw:text>BRANCH CODE</saw:text></saw:caption>
			</saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="cd0eaa99560575770">
			<saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."BRANCH_NAME"</sawx:expr></saw:columnFormula><saw:displayFormat>
			<saw:formatSpec suppress="suppress" wrapText="false"/></saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text>
			</saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text">
			<saw:text>BRANCH NAME</saw:text></saw:caption></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="c78a6b14ecff651d1">
			<saw:columnFormula>
			<sawx:expr xsi:type="sawx:sqlExpression">
			CASE 
			WHEN "RPT_LOAN_LIST"."START_DATE" = ' ' THEN ' ' 
			WHEN "RPT_LOAN_LIST"."START_DATE" is NULL THEN ' ' 
			ELSE CONCAT(SUBSTRING("RPT_LOAN_LIST"."START_DATE" FROM 5 FOR 2),CONCAT('/', CONCAT(SUBSTRING("RPT_LOAN_LIST"."START_DATE" FROM 7 FOR 2), CONCAT('/', SUBSTRING("RPT_LOAN_LIST"."START_DATE" FROM 1 FOR 4))))) END
			</sawx:expr></saw:columnFormula><saw:displayFormat><saw:formatSpec suppress="repeat" hAlign="right" wrapText="false"/></saw:displayFormat><saw:tableHeading>
			<saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat
			><saw:caption fmt="text"><saw:text>START DATE</saw:text></saw:caption></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="c71264794ab672c08">
			<saw:columnFormula>
			<sawx:expr xsi:type="sawx:sqlExpression">
			CASE 
			WHEN "RPT_LOAN_LIST"."MATURITY_DATE" = ' ' THEN ' ' 
			WHEN "RPT_LOAN_LIST"."MATURITY_DATE" is NULL THEN ' ' 
			ELSE CONCAT(SUBSTRING("RPT_LOAN_LIST"."MATURITY_DATE" FROM 5 FOR 2),CONCAT('/', CONCAT(SUBSTRING("RPT_LOAN_LIST"."MATURITY_DATE" FROM 7 FOR 2), CONCAT('/', SUBSTRING("RPT_LOAN_LIST"."MATURITY_DATE" FROM 1 FOR 4))))) END
			</sawx:expr></saw:columnFormula><saw:displayFormat><saw:formatSpec suppress="repeat" hAlign="right" wrapText="false"/></saw:displayFormat><saw:tableHeading>
			<saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/>
			</saw:displayFormat><saw:caption fmt="text"><saw:text>MATURITY DATE</saw:text></saw:caption></saw:columnHeading></saw:column>
			<saw:column xsi:type="saw:regularColumn" columnID="ce3c1fc423c1205f7"><saw:columnFormula>
			<sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."INTEREST_RATE"</sawx:expr></saw:columnFormula><saw:displayFormat>
			<saw:formatSpec suppress="repeat" wrapText="false"><saw:dataFormat minDigits="6" maxDigits="6" commas="true" negativeType="minus" xsi:type="saw:number"/>
			</saw:formatSpec></saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption></saw:tableHeading>
			<saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text"><saw:text>INTEREST RATE</saw:text></saw:caption>
			</saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="c50f90576a8e4947a"><saw:columnFormula>
			<sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."ACCT_OFFICER"</sawx:expr></saw:columnFormula><saw:displayFormat>
			<saw:formatSpec suppress="repeat" wrapText="false"/></saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text>
			</saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text">
			<saw:text>ACCOUNT OFFICER</saw:text></saw:caption></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="c87576ff16c2a54ad">
			<saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."AO_NAME"</sawx:expr></saw:columnFormula><saw:displayFormat>
			<saw:formatSpec suppress="repeat" wrapText="false"/></saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text>
			</saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text">
			<saw:text>AO NAME</saw:text></saw:caption></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="cef1eac19b694897d">
			<saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."SECTOR_CODE"</sawx:expr></saw:columnFormula><saw:displayFormat>
			<saw:formatSpec suppress="repeat" wrapText="false"/></saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption>
			</saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text"><saw:text>SECTOR CODE</saw:text></saw:caption>
			</saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="ca8137d30d9614fe2"><saw:columnFormula>
			<sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."SECTOR"</sawx:expr></saw:columnFormula><saw:displayFormat><saw:formatSpec suppress="repeat" wrapText="false"/>
			</saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption></saw:tableHeading><saw:columnHeading>
			<saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text"><saw:text>SECTOR</saw:text></saw:caption></saw:columnHeading></saw:column>
			<saw:column xsi:type="saw:regularColumn" columnID="c2a28f105f8653f56"><saw:columnFormula>
			<sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."RESIDENTIAL_STAT"</sawx:expr></saw:columnFormula><saw:displayFormat>
			<saw:formatSpec suppress="repeat" wrapText="false"/></saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption>
			</saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text"><saw:text>RESIDENTIAL STATUS</saw:text>
			</saw:caption></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="c5877599d74e33b99"><saw:columnFormula>
			<sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."CCY"</sawx:expr></saw:columnFormula><saw:displayFormat><saw:formatSpec suppress="repeat" wrapText="false"/>
			</saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption></saw:tableHeading><saw:columnHeading>
			<saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text"><saw:text>CURRENCY</saw:text></saw:caption></saw:columnHeading></saw:column>
			<saw:column xsi:type="saw:regularColumn" columnID="c7dc7c680e3e49270"><saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."RATE"</sawx:expr>
			</saw:columnFormula><saw:displayFormat><saw:formatSpec suppress="repeat" wrapText="false">
			<saw:dataFormat xsi:type="saw:number" minDigits="6" maxDigits="6" commas="true" negativeType="minus"/></saw:formatSpec></saw:displayFormat><saw:tableHeading>
			<saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat>
			<saw:caption fmt="text"><saw:text>RATE 31</saw:text></saw:caption></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="cd34cf12b5b059d87">
			<saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."BAL"</sawx:expr></saw:columnFormula><saw:displayFormat>
			<saw:formatSpec suppress="repeat" wrapText="false"><saw:dataFormat minDigits="6" maxDigits="6" commas="true" negativeType="minus" xsi:type="saw:number"/></saw:formatSpec>
			</saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat>
			<saw:formatSpec/></saw:displayFormat><saw:caption fmt="text"><saw:text>BALANCE 31</saw:text></saw:caption></saw:columnHeading></saw:column>
			<saw:column xsi:type="saw:regularColumn" columnID="c2e1814c6fe7f9fae"><saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."ACCRU_INTERE"</sawx:expr>
			</saw:columnFormula><saw:displayFormat><saw:formatSpec suppress="repeat" wrapText="true">
			<saw:dataFormat minDigits="2" maxDigits="2" commas="true" negativeType="minus" xsi:type="saw:number"/></saw:formatSpec></saw:displayFormat><saw:tableHeading>
			<saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat>
			<saw:caption fmt="text"><saw:text>ACCRUED INTEREST</saw:text></saw:caption></saw:columnHeading></saw:column>
			<saw:column xsi:type="saw:regularColumn" columnID="cac6cde2ce3bf69fa"><saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."PENAL_ACCRU"</sawx:expr>
			</saw:columnFormula><saw:displayFormat><saw:formatSpec suppress="repeat" wrapText="true">
			<saw:dataFormat minDigits="2" maxDigits="2" commas="true" negativeType="minus" xsi:type="saw:number"/></saw:formatSpec></saw:displayFormat><saw:tableHeading>
			<saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat>
			<saw:caption fmt="text"><saw:text>PENALTY ACCRUAL</saw:text></saw:caption></saw:columnHeading></saw:column>
			<saw:column xsi:type="saw:regularColumn" columnID="c2da69d3442a1078a"><saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."COMPO_INTERE"</sawx:expr>
			</saw:columnFormula><saw:displayFormat><saw:formatSpec suppress="repeat" wrapText="true">
			<saw:dataFormat minDigits="2" maxDigits="2" commas="true" negativeType="minus" xsi:type="saw:number"/></saw:formatSpec></saw:displayFormat><saw:tableHeading>
			<saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat>
			<saw:caption fmt="text"><saw:text>COMPOUND INTEREST</saw:text></saw:caption></saw:columnHeading></saw:column>
			<saw:column xsi:type="saw:regularColumn" columnID="cbbb5e617c07f585f"><saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">"RPT_LOAN_LIST"."INTERE_RECEIV"</sawx:expr>
			</saw:columnFormula><saw:displayFormat><saw:formatSpec suppress="repeat" wrapText="true">
			<saw:dataFormat minDigits="2" maxDigits="2" commas="true" negativeType="minus" xsi:type="saw:number"/></saw:formatSpec></saw:displayFormat><saw:tableHeading>
			<saw:caption fmt="text"><saw:text>RPT_LOAN_LIST</saw:text></saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat>
			<saw:caption fmt="text"><saw:text>INTEREST RECEIVABLE</saw:text></saw:caption></saw:columnHeading></saw:column></saw:columns><saw:filter>
			<sawx:expr xsi:type="sawx:sql">"RPT_LOAN_LIST"."ETL_DT" IN (@{p_date}{date '1900-01-01'})</sawx:expr></saw:filter><saw:columnOrder><saw:columnOrderRef columnID="ca66ef6ecefe211d4" direction="ascending"/></saw:columnOrder></saw:criteria><saw:views currentView="0"><saw:view xsi:type="saw:compoundView" name="compoundView!1"><saw:cvTable><saw:cvRow><saw:cvCell viewName="tableView!1"><saw:displayFormat><saw:formatSpec/></saw:displayFormat></saw:cvCell></saw:cvRow></saw:cvTable></saw:view><saw:view xsi:type="saw:titleView" name="titleView!1"/><saw:view xsi:type="saw:tableView" name="tableView!1" rowsPerPage="1000" scrollingEnabled="false" repeat="false"><saw:edges><saw:edge showColumnHeader="true" axis="page"/><saw:edge axis="section" insertPageBreak="false" showBlankRows="false" headings="none"><saw:displayFormat><saw:formatSpec wrapText="true"/></saw:displayFormat></saw:edge><saw:edge showColumnHeader="true" axis="row"><saw:edgeLayers><saw:edgeLayer type="column" columnID="ca66ef6ecefe211d4"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="left" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="cb7ca08d96bf40f1d"><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="left" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="ca18ec9ddc6d17e94"><saw:headerFormat><saw:displayFormat><saw:formatSpec hAlign="left" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="right" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="c493438368be12379"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="right" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="c8cc5e227f866e7d4"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="left" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="c4d62d6f44c0f7d51"><saw:memberFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:memberFormat><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="cc25a1908a2138efc"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="left" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="cd0eaa99560575770"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="left" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="c78a6b14ecff651d1"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="right" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="c71264794ab672c08"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="right" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="ce3c1fc423c1205f7"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="right" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="c50f90576a8e4947a"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="left" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="c87576ff16c2a54ad"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="left" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="cef1eac19b694897d"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="left" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="ca8137d30d9614fe2"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="left" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="c2a28f105f8653f56"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="left" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="c5877599d74e33b99"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="left" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="c7dc7c680e3e49270"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="right" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="cd34cf12b5b059d87"><saw:headerFormat><saw:displayFormat><saw:formatSpec wrapText="false" hAlign="left" vAlign="middle"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="right" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="c2e1814c6fe7f9fae"><saw:headerFormat><saw:displayFormat><saw:formatSpec hAlign="left" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="right" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="cac6cde2ce3bf69fa"><saw:headerFormat><saw:displayFormat><saw:formatSpec hAlign="center" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="right" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="c2da69d3442a1078a"><saw:headerFormat><saw:displayFormat><saw:formatSpec hAlign="center" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="right" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="cbbb5e617c07f585f"><saw:headerFormat><saw:displayFormat><saw:formatSpec hAlign="left" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:headerFormat><saw:memberFormat><saw:displayFormat><saw:formatSpec hAlign="right" vAlign="middle" wrapText="false"/></saw:displayFormat></saw:memberFormat></saw:edgeLayer></saw:edgeLayers></saw:edge><saw:edge showColumnHeader="rollover" axis="column"/></saw:edges><saw:sectionContent><saw:displayFormat><saw:formatSpec/></saw:displayFormat></saw:sectionContent></saw:view></saw:views><saw:prompts scope="report" subjectArea="&quot;IDL&quot;"/></saw:report>
		}
	},
	302-deploy-nacos:{
		concept:{
			https://www.jianshu.com/p/39ade28c150d
			Dynamic Naming and Configuration Service	
			Na为naming/nameServer即注册中心,co为configuration即注册中心,service是指该注册/配置中心都是以服务为核心,服务在nacos是一等公民;
			Nacos服务领域模型主要分为命名空间、集群、服务。
			在下图的分级存储模型可以看到，
				在服务级别，保存了健康检查开关、元数据、路由机制、保护阈值等设置，
				而集群保存了健康检查模式、元数据、同步机制等数据，
				实例保存了该实例的ip、端口、权重、健康检查状态、下线状态、元数据、响应时间
			5/15/30 秒
		},
		history:{
			2.0.0-bugfix (Mar 30th, 2021),
			1.4.1 (Jan 15, 2021),
			1.4.0 (Nov 2, 2020),
			1.3.2 (Aug 4, 2020),
			1.2.1 (Mar 31th, 2020),
			1.1.4 (Oct 24th, 2019),
			1.1.0 (Jul 6th, 2019) Not recommended-'190706-1.1.0':{
				灰度配置、地址服务器模式、配置文件导入导出
			},
			1.0.1 (Jun 12, 2019)
			
		},
		design:{
						主动轮训(发现)		注册							注册		主动轮训(发现)	
			provider		<―― 			――>			Server				<―― 			――>			consumer	

			服务消费者nacos-consumer通过主动轮询获取他所订阅消费的服务信息列表;
			nacos-consumer根据获取到的服务信息列表，进行服务调用。
			
		},
		ow:{
			快速开始:{
				Nacos:{
					startup.sh -m standalone
					http://192.168.137.1:8848/nacos/index.html#/login		nacos/nacos
					curl -X POST "http://127.0.0.1:8848/nacos/v1/ns/instance?serviceName=nacos.naming.serviceName&ip=20.18.7.10&port=8080"
					curl -X GET "http://127.0.0.1:8848/nacos/v1/ns/instance/list?serviceName=nacos.naming.serviceName"
					curl -X POST "http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&group=test&content=HelloWorld"
					curl -X GET "http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&group=test"
				},
				Nacos Spring:{
					启动配置管理:{
						1. 添加依赖:{
							<dependency>
								<groupId>com.alibaba.nacos</groupId>
								<artifactId>nacos-spring-context</artifactId>
								<version>${latest.version}</version>
							</dependency>
						}
					}
					启动服务发现:{
						1. 添加依赖:{
							<dependency>
								<groupId>com.alibaba.nacos</groupId>
								<artifactId>nacos-spring-context</artifactId>
								<version>${latest.version}</version>
							</dependency>
						}
					}
				}
			}
		},
		延伸阅读:{
				https://www.oschina.net/p/nacos?hmsr=aladdin1e1	
			区别
				http://www.qishunwang.net/news_show_20689.aspx		
				https://www.cnblogs.com/aixing/p/13327127.html
				https://zhuanlan.zhihu.com/p/165217227
				https://www.cnblogs.com/youyouxiaosheng-lh/p/11209421.html
				https://blog.csdn.net/fly910905/article/details/100023415
				https://blog.csdn.net/weixin_42496542/article/details/109241719
		},
		vs：{
			Nacos与Eureka区别:最大区别：Nacos支持两种模式CP/Ap模式，从Nacos 1.0 版本开始，注意模式就是Ap模式
			
			大多的注册中心都是AP

			Nacos对比Zookeeper、Eureka之间的区别
			从相同点、不同点、中心化思想三方面来
			三者都可以实现分布式注册中心框架.
			不同点：
			Zookeeper采用CP保证数据的一致性的问题， 原理采用(ZAP原子广播协议) ， 当我们ZK领导者因为某种情况下部分节点出现了故障，会自动重新实现选举新的领导角色，整个选举的过程中为了保证数据一致性的问题， 客户端暂时无法使用我们的Zookeeper， 那么这意味着整个微服务无法实现通讯（本地有缓存除外）。
			注意：可运行的节点必须满足过半机制，整个zk采用使用，自己选举 leader 和 处理follower 

			Eureka采用AP设计思想实现分布式注册中心， 完全去中心化、每个节点都是相等， 采用你中有我、我中有你相互注册设计思想，只要最后有一台Eureka节点存在整个微服务就可以实现通讯。

			中心化：必须围绕一个领导角色作为核心，选举领导和跟随者角色。
			去中心化：每个角色都是均等。

			我们在使用注册中心，可用性优先级最高，可以读取数据短暂不一致性，但是至少要能够保证注册中心可用性。

			Nacos从1.0版本选择AP和CP混合形式实现注册中心， 默认情况下采用AP， CP则采用Raft协议实现保持数据的一致性。
			如果选择为AP模式，注册服务的实例仅支持临时模式，在网络分区的的情况允许注册服务实例，选择CP模式可以支持注册服务的实例为持久模式，在网络分区的产生了抖动情况下不允许注册服务实例。
		}
	}
}



61-linux:{
	105-os-env:{	"环境变量"	
		des:{
			 '简要的说，就是指定一个目录，运行软件的时候，相关的程序将会按照该目录寻找相关文件。''设置变量对于一般人最实用的功能就是：不用拷贝某些dll文件到系统目录中了，而path这一系统变量就是系统搜索dll文件的一系列路径。'
		? ? '在linux系统下，如果你下载并安装了应用程序，很有可能在键入它的名称时出现“command not found”的提示内容。如果每次都到安装目标文件夹内，找到可执行文件来进行操作就太繁琐了。这涉及到环境变量?PATH?的设置问题，而?PATH的设置也是在linux下定制环境变量的一个组成部分。linux 查看环境变量与设置环境变量在使用过程中很常见，本文整理了一些常用的与环境变量相关的命令。'
		},
		set/unset/readonly :{
			/etc/profile			'所有用户-永久'		eg.:{	# vi  /etc/profile 				export CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib }		# source /etc/profile
			$HOME/.bash_profile		'单一用户-永久'		eg.:{	# vi  /home/guok/.bash.profile 	export CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib }		$ source /home/guok/.bash_profile		$HOME/.bashrc
			export					'当前sh	 -临时'		eg.:{	$ export HELLO="Hello!" }		'只在当前的shell(BASH)或其子shell(BASH)下是有效的，shell关闭了，变量也就失效了，再打开新shell时就没有这个变量，需要使用的话还需要重新定义'
			$ unset $TEST 
			$ readonly TEST
		}
		see:{
			$ echo $HELLO	/	echo $JAVA_HOME 
			$ env	'所有的环境变量'			$ env|grep TEST
			$ set	'所有本地定义的Shell变量'
			type -a SHELL_NAME
			
		},
		order:{
			1. 绝对命令 '指定目录',
			2. alias 别名,
			3. 内置命令:{
				'由SHELL解释器（Bash）来判断用户输入的是内部命令还是外部命令'
				内部命令: '所谓的是解释器内部的指令（在启动时就调入内存的，执行效率高），会被直接的执行，而绝大部分的时候都会是外部命令（系统的软件功能，用户需要时才从硬盘调入内存的），交由给第四步骤来继续处理，当然您还可以使用“type 命令名称”来手工判断是内部命令还是外部命令，也是很有趣的'
			},			
			4. env-path:{
				/etc/profile	->		/etc/bashrc						->		~/.profile，												->		~/.bashrc
				/etc/profile	->	/etc/profile.d和/etc/inputrc 		->		~/.bash_profile	->	~/.bash_login	->	~/.profile			->		~/.bashrc
			}
		}
	},
	161-run-clean,
	162-run-qry:{
		ps:{
			grammar:{
				single:{
					-A,'显示所有进程';
					-e,'同A';
					-f,'显示UID,PPID,C与STIME栏位';
				},
				group:{
					-ef
				}
			}
		},
		time:{	'查看命令执行时间'
			example:{	
				time ll;
				real ―― '指的是命令或程序所花费的总时间'
				user ―― '指的是在用户模式下程序所花费的时间'
				sys ―― '指的是在内核模式下程序所花费的时间'
			}
		},
	}
	select * from props$ where name='TimeZone';
	NAME							VALUE$								COMMENT$
	DBTIMEZONE						00:00								DB time zone
	DEFAULT_EDITION					ORA$BASE							Name of the database default edition
	DEFAULT_PERMANENT_TABLESPACE	USERS								Name of default permanent tablespace
	DEFAULT_TBS_TYPE				SMALLFILE							Default tablespace type
	DEFAULT_TEMP_TABLESPACE			TEMP								Name of default temporary tablespace
	DICT.BASE						2									dictionary base tables version #
	DST_PRIMARY_TT_VERSION			14									Version of primary timezone data file
	DST_SECONDARY_TT_VERSION		0									Version of secondary timezone data file
	DST_UPGRADE_STATE				NONE								State of Day Light Saving Time Upgrade
	EXPORT_VIEWS_VERSION			8									Export views revision #
	'Flashback Timestamp 			TimeZone							GMT		Flashback timestamp created in GMT'
	GLOBAL_DB_NAME					BASEDB								Global database name
	NLS_CALENDAR					GREGORIAN							Calendar system
	NLS_CHARACTERSET				AL32UTF8							Character set
	NLS_COMP						BINARY								NLS comparison
	NLS_CURRENCY					$									Local currency
	NLS_DATE_FORMAT					DD-MON-RR							Date format
	NLS_DATE_LANGUAGE				AMERICAN							Date language
	NLS_DUAL_CURRENCY				$									Dual currency symbol
	NLS_ISO_CURRENCY				AMERICA								ISO currency
	NLS_LANGUAGE					AMERICAN							Language
	NLS_LENGTH_SEMANTICS			BYTE								NLS length semantics
	NLS_NCHAR_CHARACTERSET			UTF8								NCHAR Character set
	NLS_NCHAR_CONV_EXCP	FALSE		NLS 								conversion exception
	NLS_NUMERIC_CHARACTERS			.,									Numeric characters
	NLS_RDBMS_VERSION				11.2.0.4.0							RDBMS version for NLS parameters
	NLS_SORT						BINARY								Linguistic definition
	NLS_TERRITORY					AMERICA								Territory
	NLS_TIMESTAMP_FORMAT			DD-MON-RR HH.MI.SSXFF AM			Time stamp format
	NLS_TIMESTAMP_TZ_FORMAT			DD-MON-RR HH.MI.SSXFF AM TZR		Timestamp with timezone format
	NLS_TIME_FORMAT					HH.MI.SSXFF AM						Time format
	NLS_TIME_TZ_FORMAT				HH.MI.SSXFF AM TZR					Time with timezone format
	NO_USERID_VERIFIER_SALT			61FE9A498A8FB6995B77028E02D6C276		
	TDE_MASTER_KEY_ID			
	WORKLOAD_CAPTURE_MODE												CAPTURE implies workload capture is in progress
	WORKLOAD_REPLAY_MODE												PREPARE implies external replay clients can connect; REPLAY implies workload replay is in progress


}
70-db:{
	70-db-common:{
		40-grammar:{common},
		44-grammar-table,
		45-grammar-curd,
	},
	71-db-oracle:{
		21-install-version,
		30-connect:{
			cmd:{	'结尾不要带;,ORA-12514: TNS: 监听程序当前无法识别连接描述符中请求的服务'
				sqlplus sys/123456 as sysdba;
				sqlplus scott/scott@192.168.11.111:1521/orcl 
				sqlplus cbsbase/cbsbase@172.31.5.12:1521/BASEDB				#service name  
				sqlplus cbsbasedev/cbsbase@172.31.5.12:1521/BASEDB				
				sqlplus cbsbase/cbsbase@172.31.5.12:1521/BASEDB	as sysdba	#ORA-01017: invalid username/password; logon denied	
				sqlplus oracle/oracle@172.31.5.12:1521/BASEDB	
				sqlplus ocl/ocl@172.31.5.12:1521/BASEDB		
				sqlplus ocl/ocl@172.31.5.12:1521/BASEDB	
				sqlplus cbsbase/cbsbase@172.31.5.12:1521/BASEDB	
				sqlplus oracleuser/oracle@172.31.5.12:1521/BASEDB	
				'直接以管理员登录'
				sqlplus "/as sysdba"
			}
		},
		43-grammar-db:{
			init:{	
				db:{
					create:{
						-- create database file
						CREATE TABLESPACE mcb LOGGING DATAFILE 'D:\03-sl\224-mcb-gl\24-dev\00-init\32-db-file\mcb.dbf' SIZE 100M AUTOEXTEND ON NEXT 32M MAXSIZE 500M EXTENT MANAGEMENT LOCAL;
						-- create database temporary file
						create temporary TABLESPACE mcb_temp tempfile 'D:\03-sl\224-mcb-gl\24-dev\00-init\32-db-file\mcb_temp.dbf' SIZE 100M AUTOEXTEND ON NEXT 32M MAXSIZE 500M EXTENT MANAGEMENT LOCAL;
					},
					del:{
						conn sys/dwh as sysdba;
						-- MyDataBase
						drop tablespace MyDataBase including contents and datafiles;
						drop tablespace MyDataBase_temp including contents and datafiles;
						-- mcb
						drop tablespace mcb including contents and datafiles;
						drop tablespace mcb_temp including contents and datafiles;
					}
				},
				tablespace
				user:{
					create:{
						CREATE USER mcb_admin IDENTIFIED BY mcb_admin DEFAULT TABLESPACE mcb TEMPORARY TABLESPACE mcb_temp;
					},
					del:{
						drop user mcb_uat_cbs cascade;
					}
				},
				auth:{
					grant connect,resource,dba to mcb_admin;
					grant create session to mcb_admin;
				}		
			},
			restart:{
				shutdown immediate
				startup
				startup mount;
			},
			autocommit:{	'无论AUTOCOMMIT设置为何值，当退出SQL*Plus时，当前会话所有的DML操作所改变的数据都会被提交'
				事务隔离级别,	提交读（Read Committed）'默认';	提交数据类型,显式提交、隐式提交及自动提交;
				显式:{COMMIT;}-'COMMIT命令直接完成的提交为显式提交',
				隐式:{ALTER，AUDIT，COMMENT，CONNECT，CREATE，DISCONNECT，DROP，EXIT，GRANT，NOAUDIT，QUIT，REVOKE，RENAME;}-'SQL命令间接完成的提交为隐式提交',
				自动:{	-'把AUTOCOMMIT设置为ON，则在插入、修改、删除语句执行后，系统将自动进行提交，这就是自动提交',
					grammar:{	"SET AUTO[COMMIT] { OFF | ON | IMM[EDIATE] | n }"	
						show autocommit		'sqlplus命令'	'autocommit IMMEDIATE'	-'ON和IMM都表示打开自动提交，二者没有区别'
						OFF为默认值，表示关闭自动提交,
						n,n表示成功执行n条DML操作后再自动提交。n不能小于0，也不能大于20亿（ 2,000,000,000 ） '不是一个DML语句所影响的行数，而是DML语句的个数',
						SET AUTOCOMMIT ON;
					},
				}
			}
			exp/imp:{
				characters:{
					https://www.linuxidc.com/Linux/2018-01/150043.htm
					see:{
						cat '/home/soft/scott.dmp' |od -x|head -1|awk '{print $2 $3}'|cut -c 3-6
						cat 'basedb_after_20210616.dmp' |od -x|head -1|awk '{print $2 $3}'|cut -c 3-6
						0345
						select nls_charset_name(to_number('0345','xxxx')) from dual;
					},
				},
			}
		},
		44-grammar-table:{
			alter table table_name add (name varchar(20) default '');
			count:{
				code-01:{
					declare
					  v_sql varchar2(200);
					  v_cnt number(10);
					begin
					  for v_tab in (select table_name from user_tables t where table_name like 'TEST%') loop
						v_sql := 'select count(*) from '|| v_tab.table_name;
						execute immediate v_sql into v_cnt;
						dbms_output.put_line(v_tab.table_name||':'||v_cnt);
					  end loop;
					end;
				},
				code-02:{
					declare
					  v_sql varchar2(200);
					  v_cnt number(10);
					begin
					  for v_tab in (select table_name from user_tables t where TABLESPACE_NAME ='CBS_DATA' ORDER BY table_name) loop
						v_sql := 'select count(*) from '|| v_tab.table_name;
						execute immediate v_sql into v_cnt;
						if v_cnt>10000 then 
							dbms_output.put_line(v_tab.table_name||':'||v_cnt);
						end if;
					  end loop;
					end;
				},
				user_tables:{	'不准'
					select t.table_name,NVL(t.num_rows, 0) "rows" from user_tables t ORDER BY "rows" desc;
				}
			},
			inner:{
				user_tables:{
					select * from user_tables t where table_name like 'TEST%';
					cols-key:{
					},
					cols:{
						table_name -表名
						tablespace_name -表空间名
						cluster_name -群集名称
						iot_name -IOT（Index Organized Table）索引组织表的名称
						status -状态
						pct_free -为一个块保留的空间百分比
						pct_used -一个块的使用水位的百分比
						ini_trans -初始交易的数量
						max_trans -交易的最大数量
						initial_extent -初始扩展数
						next_extent -下一次扩展数
						min_extents -最小扩展数
						max_extents -最大扩展数
						pct_increase -表在做了第一次extent后，下次再扩展时的增量，它是一个百分比值
						freelists -可用列表是表中的一组可插入数据的可用块
						freelist_groups -列表所属组
						logging -是否记录日志
						backed_up -指示自上次修改表是否已备份（Y）或否（N）的
						num_rows -表中的行数
						blocks -所使用的数据块数量
						empty_blocks -空数据块的数量
						avg_space -自由空间的平均量
						chain_cnt -从一个数据块，或迁移到一个新块链接表中的行数
						avg_row_len -行表中的平均长度
						avg_space_freelist_blocks -一个freelist上的所有块的平均可用空间
						num_freelist_blocks -空闲列表上的块数量
						degree -每个实例的线程数量扫描表
						instances -跨表进行扫描的实例数量
						cache -是否是要在缓冲区高速缓存
						table_lock -是否启用表锁
						sample_size -分析这个表所使用的样本大小
						last_analyzed -最近分析的日期
						partitioned -表是否已分区
						iot_type -表是否是索引组织表
						temporary -表是否是暂时的
						secondary -表是否是次要的对象
						nested -是否是一个嵌套表
						buffer_pool -缓冲池的表
						flash_cache -智能闪存缓存提示可用于表块
						cell_flash_cache -细胞闪存缓存提示可用于表块
						row_movement -是否启用分区行运动
						global_stats -作为一个整体（全球统计）表的统计的是否准确
						user_stats -是否有统计
						duration -临时表的时间
						skip_corrupt -是否忽略损坏的块标记在表和索引扫描（ENABLED）状态的或将引发一个错误（已禁用）。
						monitoring -是否有监测属性集
						cluster_owner -群集的所有者
						dependencies -行依赖性跟踪是否已启用
						compression -是否启用表压缩
						compress_for -什么样的操作的默认压缩
						dropped -是否已经删除并在回收站
						read_only -表是否是只读
						segment_created -是否创建表段
						result_cache -结果缓存表的模式注释
					}
				}
			}
		},
		45-grammar-curd:{
			read-select:{
				!=:{^=,<>}
			}
		},
		46-grammar-function:{
			string:{
				add:{
					||	
					CONCAT():{
						concat('aa','bb');
						concat('aa','bb','cc'),0RA-00909:invalid number of arguments;
						concat(concat('aa','bb'),'cc');
					}
				},
				search:{
					1 select instr('helloworld','l') from dual; --返回结果：3    默认第一次出现“l”的位置
					2 select instr('helloworld','lo') from dual; --返回结果：4    即“lo”同时出现，第一个字母“l”出现的位置
					3 select instr('helloworld','wo') from dual; --返回结果：6    即“wo”同时出现，第一个字母“w”出现的位置
					格式二

					复制代码
					1 select instr('helloworld','l',2,2) from dual;  --返回结果：4    也就是说：在"helloworld"的第2(e)号位置开始，查找第二次出现的“l”的位置
					2 select instr('helloworld','l',3,2) from dual;  --返回结果：4    也就是说：在"helloworld"的第3(l)号位置开始，查找第二次出现的“l”的位置
					3 select instr('helloworld','l',4,2) from dual;  --返回结果：9    也就是说：在"helloworld"的第4(l)号位置开始，查找第二次出现的“l”的位置
					4 select instr('helloworld','l',-1,1) from dual;  --返回结果：9    也就是说：在"helloworld"的倒数第1(d)号位置开始，往回查找第一次出现的“l”的位置
					5 select instr('helloworld','l',-2,2) from dual;  --返回结果：4    也就是说：在"helloworld"的倒数第2(l)号位置开始，往回查找第二次出现的“l”的位置
					6 select instr('helloworld','l',2,3) from dual;  --返回结果：9    也就是说：在"helloworld"的第2(e)号位置开始，查找第三次出现的“l”的位置
					7 select instr('helloworld','l',-2,3) from dual; --返回结果：3    也就是说：在"helloworld"的倒数第2(l)号位置开始，往回查找第三次出现的“l”的位置
				}
			}
		},
		48-grammar-coding:{
			if:{
				example-01:{
					if V_TEST = 1 then
					dbms_output.put_line('1----');
					end if;
				},
				example-02:{
					if V_TEST = 1 then
				? ? ? ? dbms_output.put_line('1----');
				? ? ?else if V_TEST = 2 then
				? ? ? ? dbms_output.put_line('2----');
				? ? ?else if V_TEST = 3 then
				? ? ? ? dbms_output.put_line('3----');
				? ? ?end if;
				? ? ?end if;
				? ? ?end if;
				}
			}
		},
		50-exception:{
			ora-01033:ORACLE initialization or shutdown in progress:{
			},
			ora-01658: 无法为表空间 GL_UAT 中的段创建 INITIAL 区:{
				-- 表空间使用情况查询
				SELECT a.tablespace_name "表空间名",total/1024/1024  "表空间大小单位M",free/1024/1024 "表空间剩余大小单位M",(total - free)/1024/1024 "表空间使用大小单位M",Round((total - free) / total, 4) * 100 "使用率   [[%]]"FROM (SELECT tablespace_name,Sum(bytes) free FROM DBA_FREE_SPACE GROUP BY tablespace_name) a,(SELECT tablespace_name,Sum(bytes) total FROM DBA_DATA_FILES GROUP BY tablespace_name) b WHERE a.tablespace_name = b.tablespace_name;
				view:{
					SELECT 
						a.tablespace_name "表空间名",
						total/1024/1024  "表空间大小单位M",
						free/1024/1024 "表空间剩余大小单位M",
						(total - free)/1024/1024 "表空间使用大小单位M",
						Round((total - free) / total, 4) * 100 "使用率   [[%]]"
					FROM 
						(SELECT tablespace_name,Sum(bytes) free FROM DBA_FREE_SPACE GROUP BY tablespace_name) a,
						(SELECT tablespace_name,Sum(bytes) total FROM DBA_DATA_FILES GROUP BY tablespace_name) b
					WHERE 
						a.tablespace_name = b.tablespace_name;
				}
			},
			ora-12537:tns:连接关闭:{
				cdb-1.3-uat-esb-过一段时间自己好了..?
				listener.log:{
					echo $ORACLE_HOME;
					$ORACLE_HOME/network/log/
					itpub :{	http://blog.itpub.net/23169974/viewspace-1067401/
						metlink上说是网络问题，让设置sqlnet.ora跟listener.ora，或者是DNS问题，但这个案例这方面都没问题，最后发现，是listener.log 达到了4G，无法写入了。清除后就好了。
					}
				},
				chmod 6751 ORACLE_HOME/bin/oracle:{
					https://www.cnblogs.com/renzmin/p/12144617.html	
					ORA-12537: TNS:connection closed问题解决
					环境：oracle redhat7.7  + oracle 11g  rac 
					问题描述：客户端无法连接数据库，并报错：ORA-12537: TNS:connection closed
					lsnrctl status 监听正常，lsnrclt stop/start 能正常启动，尝试连接，依然报同样的错，再查看监听日志，没发现明显的错误信息，然后在网上查找到解决办法（链接：http://blog.itpub.net/post/38575/530168）：
							修改$ORACLE_HOME/bin 下的oracle文件的权限
					  具体操作过程：
									   [oracle@rac1 ~][Math Processing Error]ORACLE_HOME/bin/
									   [oracle@rac1 bin]$ ls -l oracle
										-r-xr-sr-x 1 oracle asmadmin 173515905 Dec 21 16:46 oracle
									   [oracle@rac1 bin]$ chmod 6751 oracle
									   [oracle@rac1 bin]$ ls -l oracle
										-rwsr-s--x 1 oracle asmadmin 173515905 Dec 21 16:46 oracle
						重新连接，OK！
				},
				connections max:{检查下是不是连接数达到上限了}
			},
			ora-12518:tns:监听程序无法分发客户机连接:{}
		}
	},
	72-db-mysql:{
		30-connect:{
			cmd:{	'mysql  -h 端口号  -h  主机名\ip -u用户  -p 密码	,#注意都是小写'
				mysql -p3306 -hlocalhost  -uroot -proot
			}
		},
		43-grammar-db:{
			version:{
				select version(); 					pro-5.7.22-enterprise-commercial-advanced-log
				show variables like '%version%';	:{
													5.7.22
													5.7.22-enterprise-commercial-advanced-log
													MySQL Enterprise Server - Advanced Edition (Commercial)
				},
				status  							'只能在mysql命令行使用'
				mysql -v 							'只能在mysql服务器使用'
			},
			autocommit:{	'https://www.jianshu.com/p/b13ec76117c4'
				show variables like '%autocommit%';
				set @@session.autocommit=0;
				set @@global.autocommit=0;
				vi /etc/my.cnf						init_connect='set autocommit=0'    
			},
			information_schema:{
				tables:{
					columns:{
						table_name-表名,
						data_length-数据所占容量(B),
							truncate(data_length/1024/1024, 2) as '数据容量(MB)'
						index_length-索引所占容量(B),
							truncate(index_length/1024/1024, 2) as '索引容量(MB)'
						table_rows-总记录数:{
							count(*):{
								与select count(*) from 不一样
								那是因为：
								（1）默认情况下 mysql 对表进行增删操作时，是不会自动更新 information_schema 库中 tables 表的 table_rows 字段的，在网上搜索一下发现说：只有10%的行数发生变化才会自动收集（没有亲自验证过！）；
								（2）执行 Analyze table tableName; 会统计所有表数据（在生产环境中不建议使用，因为会锁表！）；
								https://blog.csdn.net/David_jiahuan/article/details/98478740
								（3）备注：
								num_rows 是对表做 statistics analysis 后填充，表和索引的统计分析工作，在9i是要手工做的，10i是可以自动做的。但肯定要有延迟。dba_tables显示的表的记录数是对表进行分析以后才与表的真正记录数同步一次的
								（4）同步
								exec dbms_stats.gather_table_stats(OWNNAME =>'CSID', TABNAME => 'dba_extents',METHOD_OPT => 'FOR ALL');
								http://blog.sina.com.cn/s/blog_713978a50100rccd.html
							}
						},
						table_schema-表名所属库名,
					},
					common-use:{
						all db size:{
							1. 查看所有数据库容量大小:{
								-- 9G
								select 
								table_schema as '数据库',
								sum(table_rows) as '记录数',
								sum(truncate(data_length/1024/1024, 2)) as '数据容量(MB)',
								sum(truncate(index_length/1024/1024, 2)) as '索引容量(MB)'
								from information_schema.tables
								group by table_schema
								order by sum(data_length) desc, sum(index_length) desc;
								all tables size by db
							},
							2. 查看所有数据库各表容量大小:{
								-- 7.09s
								select 
								table_schema as '数据库',
								table_name as '表名',
								table_rows as '记录数',
								truncate(data_length/1024/1024, 2) as '数据容量(MB)',
								truncate(index_length/1024/1024, 2) as '索引容量(MB)'
								from information_schema.tables
								order by data_length desc, index_length desc;
								the db size
							},
							3. 查看指定数据库容量大小:{
								select 
								table_schema as '数据库',
								sum(table_rows) as '记录数',
								sum(truncate(data_length/1024/1024, 2)) as '数据容量(MB)',
								sum(truncate(index_length/1024/1024, 2)) as '索引容量(MB)'
								from information_schema.tables
								where table_schema='mysql';
								tables size of the db
							},
							4. 查看指定数据库各表容量大小:{
								select 
								table_schema as '数据库',
								table_name as '表名',
								table_rows as '记录数',
								truncate(data_length/1024/1024, 2) as '数据容量(MB)',
								truncate(index_length/1024/1024, 2) as '索引容量(MB)'
								from information_schema.tables
								where table_schema='mysql'
								order by data_length desc, index_length desc;
								the table
							},
							5. 查看指定表容量大小:{
								select table_rows as '记录数',
								truncate(data_length/1024/1024, 2) as '数据容量(MB)',
								truncate(index_length/1024/1024, 2) as '索引容量(MB)'
								from information_schema.tables where table_name='cfb_person_base';

								select table_rows as 'c',
								truncate(data_length/1024/1024, 2) as 'ds',
								truncate(index_length/1024/1024, 2) as 'is'
								from information_schema.tables where table_name='cfb_person_base';
							}
						}
					},
					others:{
						获取所有表结构(TABLES)
						SELECT  *  FROM information_schema.TABLES WHERE  TABLE_SCHEMA='数据库名';  
						TABLES表：提供了关于数据库中的表的信息（包括视图）。详细表述了某个表属于哪个schema，表类型，表引擎，创建时间等信息。
						各字段说明如下:{
								字段			含义
							Table_catalog	数据表登记目录
							Table_schema	数据表所属的数据库名
							Table_name		表名称
							Table_type		表类型[system view|base table]
							Engine			使用的数据库引擎[MyISAM|CSV|InnoDB]
							Version			版本，默认值10
							Row_format		行格式[Compact|Dynamic|Fixed]
							Table_rows		表里所存多少行数据
							Avg_row_length	平均行长度
							Data_length		数据长度
							Max_data_length	最大数据长度
							Index_length	索引长度
							Data_free		空间碎片
							Auto_increment	做自增主键的自动增量当前值
							Create_time		表的创建时间
							Update_time		表的更新时间
							Check_time		表的检查时间
							Table_collation	表的字符校验编码集
							Checksum		校验和
							Create_options	创建选项
							Table_comment	表的注释、备注
						},
						详细说明:
						row_format:{
							若一张表里面不存在varchar、text以及其变形、blob以及其变形的字段的话，那么张这个表其实也叫静态表，即该表的row_format是fixed，就是说每条记录所占用的字节一样。其优点读取快，缺点浪费额外一部分空间。
							若一张表里面存在varchar、text以及其变形、blob以及其变形的字段的话，那么张这个表其实也叫动态表，即该表的row_format是dynamic，就是说每条记录所占用的字节是动态的。其优点节省空间，缺点增加读取的时间开销。
							所以，做搜索查询量大的表一般都以空间来换取时间，设计成静态表。
							 row_format还有其他一些值：
							DEFAULT | FIXED | DYNAMIC | COMPRESSED | REDUNDANT | COMPACT
							修改行格式
							ALTER TABLE table_name ROW_FORMAT = DEFAULT
							修改过程导致：
							fixed--->dynamic: 这会导致CHAR变成VARCHAR
							dynamic--->fixed: 这会导致VARCHAR变成CHAR
						},
						data_free:{
							每当MySQL从你的列表中删除了一行内容，该段空间就会被留空。而在一段时间内的大量删除操作，会使这种留空的空间变得比存储列表内容所使用的空间更大。
							当MySQL对数据进行扫描时，它扫描的对象实际是列表的容量需求上限，也就是数据被写入的区域中处于峰值位置的部分。如果进行新的插入操作，MySQL将尝试利用这些留空的区域，但仍然无法将其彻底占用。
							1. 查询数据库空间碎片：
							select table_name,data_free,engine from information_schema.tables where table_schema='yourdatabase';
							2. 对数据表优化：
							optimeze table `table_name`;
						}
						参考：
						http://wenku.baidu.com/link?url=MtPZrab7kbciXsBAjia4w0JUE3aFCtOj9fu_2zXVE5JW6k8UHaFCl6ppGE89HPMUFmLSMTjmp2rqbIMcSXBIJ11LIlxzDYJH1qLHZpNdqYu
						http://blog.sina.com.cn/s/blog_70b9a0e90101cmdz.html
						http://www.2cto.com/database/201208/144994.html
					}
				},
				optimizer_trace:{
					variables
					open:{
						show variables like 'optimizer_trace'; -- enabled=off,one_line=off
						set optimizer_trace='enabled=on';
						show variables like 'optimizer_trace'; -- enabled=on,one_line=off
					},
					columns:{
						1、 query :查询语句
						2、 trace :查询的追踪信息
					}
				},
				information_schema+:{
					https://www.cnblogs.com/shengdimaya/p/6916554.html
					INNODB_FT_CONFIG-全文索引信息
				}
			},
			performance_schema.events_statements_current:{
				 select THREAD_ID,EVENT_ID,END_EVENT_ID,TIMER_START,TIMER_END,TIMER_WAIT,LOCK_TIME,SQL_TEXT 
				 from performance_schema.events_statements_current where SQL_TEXT like'%cfb_person_base%';
			}
		},
		46-grammar-function:{
			null:{
				ifnull:{}
			}
		},
		48-grammar-coding:{
			logic:{
				for:{	'原文链接：https://blog.csdn.net/yangzjchn/article/details/82705565'
					while [condition] do [some;] end while;	:{
						grammar:{
							[标签:]while 循环条件 do 循环体
							end while[标签];
						},
						example:{
							delimiter //                            #定义标识符为双斜杠
							drop procedure if exists test;          #如果存在test存储过程则删除
							create procedure test()                 #创建无参存储过程,名称为test
							begin
								declare i int;                      #申明变量
								set i = 0;                          #变量赋值
								while i < 10 do                     #结束循环的条件: 当i大于10时跳出while循环
									insert into test values (i);    #往test表添加数据
									set i = i + 1;                  #循环一次,i加一
								end while;                          #结束while循环
								select * from test;                 #查看test表数据
							end
							//                                      #结束定义语句
							call test();                            #调用存储过程
						}
					},
					repeat [some;] until [condition] end repeat; :{
						grammar:{
							[标签:]repeat
							循环体
							until 结束循环的条件
							end repeat[标签];
						},
						example:{
							delimiter //                            #定义标识符为双斜杠
							drop procedure if exists test;          #如果存在test存储过程则删除
							create procedure test()                 #创建无参存储过程,名称为test
							begin
								declare i int;                      #申明变量
								set i = 0;                          #变量赋值
								repeat
									insert into test values (i);    #往test表添加数据
									set i = i + 1;                  #循环一次,i加一
								until i > 10 end repeat;            #结束循环的条件: 当i大于10时跳出repeat循环
								select * from test;                 #查看test表数据
							end
							//                                      #结束定义语句
							call test();                            #调用存储过程
						}
					},
					[name] : loop [some;] leave [name]; end loop;	:{
						grammar:{
							[标签:]loop
							循环体
							end loop[标签];
						},
						example:{
							delimiter //                            #定义标识符为双斜杠
							drop procedure if exists test;          #如果存在test存储过程则删除
							create procedure test()                 #创建无参存储过程,名称为test
							begin
								declare i int;                      #申明变量
								set i = 0;                          #变量赋值
								lp : loop                           #lp为循环体名,可随意 loop为关键字
									insert into test values (i);    #往test表添加数据
									set i = i + 1;                  #循环一次,i加一
									if i > 10 then                  #结束循环的条件: 当i大于10时跳出loop循环
										leave lp;
									end if; 
								end loop;
								select * from test;                 #查看test表数据
							end
							//                                      #结束定义语句
							call test();                            #调用存储过程
						}
					}
				}
			},
			procedure:{
				example:{
					delimiter //                            #定义标识符为双斜杠
					drop procedure if exists test;          #如果存在test存储过程则删除
					create procedure test()                 #创建无参存储过程,名称为test
					begin
						declare i int;                      #申明变量
						set i = 0;                          #变量赋值
						while i < 10 do                     #结束循环的条件: 当i大于10时跳出while循环
							insert into test values (i);    #往test表添加数据
							set i = i + 1;                  #循环一次,i加一
						end while;                          #结束while循环
						select * from test;                 #查看test表数据
					end
					//                                      #结束定义语句
					call test();                            #调用存储过程
				},
				exception:{
					1064:{
						declare a int ; #error
						delimiter //	
						drop procedure if exists test;  # 如果存在名字为test的procedure则删除
						create procedure test()  # 创建（创建函数使用的关键字为function 函数名()）
						begin
								declare i int default 0;                    #申明变量
						end
						 //
						delimiter ;
						call test(); # 调用
					}
				}
			}
		}
	}
},
83-micro-office:{
	01-word:{
		30-content:{
			10-characters,
			20-format,
			30-symbol:{
				插入->符号->其他符号:{字体}
			},
		}
	}
}
